###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         21/Dec/2023  22:42:42
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\libraries\USER\move.c
#    Command line      =
#        -f
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\Debug\Obj\libraries\USER\move.o.rsp
#        (C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\libraries\USER\move.c
#        -D USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\Debug\List\libraries\USER
#        -o
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\Debug\Obj\libraries\USER
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.1\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\libraries\CMSIS\DeviceSupport\
#        -I
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\libraries\CMSIS\DeviceSupport\Startup\
#        -I
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\libraries\LCD\
#        -I
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\user\
#        -I
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\user\inc\
#        -I
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\libraries\
#        -I
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\libraries\USER\
#        -Ol -I "C:\Program Files\IAR Systems\Embedded Workbench
#        9.1\arm\CMSIS\Core\Include\\") --dependencies=n
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\Debug\Obj\libraries\USER\move.o.d
#    Locale            =  C
#    List file         =
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\Debug\List\libraries\USER\move.lst
#    Object file       =
#        C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\Debug\Obj\libraries\USER\move.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Users\hyuunnnn\Desktop\temptemp\testing-ground-cda8245e2e235e810093876e6cf13ad1e43a4a22\PROJECT\libraries\USER\move.c
      1          #include "move.h"
      2          #include <math.h>
      3          

   \                                 In section .bss, align 4
      4          int global_Theta = 0;
   \                     global_Theta:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
      5          Point global_Current_Point, global_Next_Point;
   \                     global_Current_Point:
   \        0x0                      DS8 8

   \                                 In section .bss, align 4
   \                     global_Next_Point:
   \        0x0                      DS8 8
      6          

   \                                 In section .text, align 2, keep-with-next
      7          float thetaToRad(int theta) { return (float)theta * M_PI / 180; }
   \                     thetaToRad: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x.... 0x....      BL       __aeabi_i2f
   \        0x6   0x.... 0x....      BL       __aeabi_f2d
   \        0xA   0x....             LDR.N    R2,??DataTable6
   \        0xC   0x....             LDR.N    R3,??DataTable6_1
   \        0xE   0x.... 0x....      BL       __aeabi_dmul
   \       0x12   0x2200             MOVS     R2,#+0
   \       0x14   0x....             LDR.N    R3,??DataTable6_2
   \       0x16   0x.... 0x....      BL       __aeabi_ddiv
   \       0x1A   0x.... 0x....      BL       __aeabi_d2f
   \       0x1E   0xBD02             POP      {R1,PC}
      8          

   \                                 In section .text, align 2, keep-with-next
      9          int chkIsInCourse() {
   \                     chkIsInCourse: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
     10            int size = target_Map_size;
   \        0x2   0x....             LDR.N    R0,??DataTable6_3
   \        0x4   0x6805             LDR      R5,[R0, #+0]
     11          
     12            for (int i = 0; i < size; i++) {
   \        0x6   0x2400             MOVS     R4,#+0
   \        0x8   0xE000             B.N      ??chkIsInCourse_0
   \                     ??chkIsInCourse_1: (+1)
   \        0xA   0x1C64             ADDS     R4,R4,#+1
   \                     ??chkIsInCourse_0: (+1)
   \        0xC   0x42AC             CMP      R4,R5
   \        0xE   0xDA1E             BGE.N    ??chkIsInCourse_2
     13              if (getCCW(target_Map[i], target_Map[(i + 1) % size],
     14                         global_Current_Point) == 0) {
   \       0x10   0x1C60             ADDS     R0,R4,#+1
   \       0x12   0x....             LDR.N    R1,??DataTable6_4
   \       0x14   0x....             LDR.N    R2,??DataTable6_5
   \       0x16   0xE9D2 0x6700      LDRD     R6,R7,[R2, #+0]
   \       0x1A   0xE9CD 0x6700      STRD     R6,R7,[SP, #+0]
   \       0x1E   0xFB90 0xF2F5      SDIV     R2,R0,R5
   \       0x22   0xFB05 0x0012      MLS      R0,R5,R2,R0
   \       0x26   0xEB01 0x00C0      ADD      R0,R1,R0, LSL #+3
   \       0x2A   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \       0x2E   0xEB01 0x06C4      ADD      R6,R1,R4, LSL #+3
   \       0x32   0xE9D6 0x0100      LDRD     R0,R1,[R6, #+0]
   \       0x36   0x.... 0x....      BL       getCCW
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD1E5             BNE.N    ??chkIsInCourse_1
     15                return (i + 1) % size + 1;
   \       0x3E   0x1C64             ADDS     R4,R4,#+1
   \       0x40   0xFB94 0xF0F5      SDIV     R0,R4,R5
   \       0x44   0xFB05 0x4510      MLS      R5,R5,R0,R4
   \       0x48   0x1C6D             ADDS     R5,R5,#+1
   \       0x4A   0x0028             MOVS     R0,R5
   \       0x4C   0xE000             B.N      ??chkIsInCourse_3
     16              }
     17            }
     18          
     19            return 0;
   \                     ??chkIsInCourse_2: (+1)
   \       0x4E   0x2000             MOVS     R0,#+0
   \                     ??chkIsInCourse_3: (+1)
   \       0x50   0xBDFE             POP      {R1-R7,PC}
     20          }
     21          

   \                                 In section .text, align 2, keep-with-next
     22          int getTheta(Point p0, Point p1, Point p2) {
   \                     getTheta: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB084             SUB      SP,SP,#+16
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x000D             MOVS     R5,R1
   \        0xA   0x4690             MOV      R8,R2
   \        0xC   0x4699             MOV      R9,R3
   \        0xE   0xE9DD 0x670E      LDRD     R6,R7,[SP, #+56]
     23            Point v0 = {p1.x - p0.x, p1.y - p0.y}, v1 = {p2.x - p0.x, p2.y - p0.y};
   \       0x12   0x4640             MOV      R0,R8
   \       0x14   0x0021             MOVS     R1,R4
   \       0x16   0x.... 0x....      BL       __aeabi_fsub
   \       0x1A   0x9002             STR      R0,[SP, #+8]
   \       0x1C   0x4648             MOV      R0,R9
   \       0x1E   0x0029             MOVS     R1,R5
   \       0x20   0x.... 0x....      BL       __aeabi_fsub
   \       0x24   0x9003             STR      R0,[SP, #+12]
   \       0x26   0x0030             MOVS     R0,R6
   \       0x28   0x0021             MOVS     R1,R4
   \       0x2A   0x.... 0x....      BL       __aeabi_fsub
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   \       0x30   0x0038             MOVS     R0,R7
   \       0x32   0x0029             MOVS     R1,R5
   \       0x34   0x.... 0x....      BL       __aeabi_fsub
   \       0x38   0x9001             STR      R0,[SP, #+4]
     24          
     25            float dot = v0.x * v1.x + v0.y * v1.y;
   \       0x3A   0x9902             LDR      R1,[SP, #+8]
   \       0x3C   0x9800             LDR      R0,[SP, #+0]
   \       0x3E   0x.... 0x....      BL       __aeabi_fmul
   \       0x42   0x4682             MOV      R10,R0
   \       0x44   0x9903             LDR      R1,[SP, #+12]
   \       0x46   0x9801             LDR      R0,[SP, #+4]
   \       0x48   0x.... 0x....      BL       __aeabi_fmul
   \       0x4C   0x4651             MOV      R1,R10
   \       0x4E   0x.... 0x....      BL       __aeabi_fadd
   \       0x52   0x4683             MOV      R11,R0
     26            float det = getDistance(p0, p1) * getDistance(p0, p2);
   \       0x54   0x4642             MOV      R2,R8
   \       0x56   0x464B             MOV      R3,R9
   \       0x58   0x0020             MOVS     R0,R4
   \       0x5A   0x0029             MOVS     R1,R5
   \       0x5C   0x.... 0x....      BL       getDistance
   \       0x60   0x4682             MOV      R10,R0
   \       0x62   0x0032             MOVS     R2,R6
   \       0x64   0x003B             MOVS     R3,R7
   \       0x66   0x0020             MOVS     R0,R4
   \       0x68   0x0029             MOVS     R1,R5
   \       0x6A   0x.... 0x....      BL       getDistance
   \       0x6E   0x4651             MOV      R1,R10
   \       0x70   0x.... 0x....      BL       __aeabi_fmul
   \       0x74   0x0001             MOVS     R1,R0
     27          
     28            return (int)((acosf(dot / det) * (float)getCCW(p0, p1, p2) * 180 / M_PI) +
     29                         360) %
     30                   360;
   \       0x76   0x4658             MOV      R0,R11
   \       0x78   0x.... 0x....      BL       __aeabi_fdiv
   \       0x7C   0x.... 0x....      BL       acosf
   \       0x80   0x4682             MOV      R10,R0
   \       0x82   0xE9CD 0x6700      STRD     R6,R7,[SP, #+0]
   \       0x86   0x4642             MOV      R2,R8
   \       0x88   0x464B             MOV      R3,R9
   \       0x8A   0x0020             MOVS     R0,R4
   \       0x8C   0x0029             MOVS     R1,R5
   \       0x8E   0x.... 0x....      BL       getCCW
   \       0x92   0x.... 0x....      BL       __aeabi_i2f
   \       0x96   0x4651             MOV      R1,R10
   \       0x98   0x.... 0x....      BL       __aeabi_fmul
   \       0x9C   0x....             LDR.N    R1,??DataTable6_6
   \       0x9E   0x.... 0x....      BL       __aeabi_fmul
   \       0xA2   0x.... 0x....      BL       __aeabi_f2d
   \       0xA6   0x....             LDR.N    R2,??DataTable6
   \       0xA8   0x....             LDR.N    R3,??DataTable6_1
   \       0xAA   0x.... 0x....      BL       __aeabi_ddiv
   \       0xAE   0x2200             MOVS     R2,#+0
   \       0xB0   0x....             LDR.N    R3,??DataTable6_7
   \       0xB2   0x.... 0x....      BL       __aeabi_dadd
   \       0xB6   0x.... 0x....      BL       __aeabi_d2iz
   \       0xBA   0xF44F 0x71B4      MOV      R1,#+360
   \       0xBE   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0xC2   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0xC6   0xB005             ADD      SP,SP,#+20
   \       0xC8   0xE8BD 0x8FF0      POP      {R4-R11,PC}
     31          }
     32          

   \                                 In section .text, align 2, keep-with-next
     33          int chkArrived(Point p0, Point p1) { return getDistance(p0, p1) < THRESHOLD; }
   \                     chkArrived: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x.... 0x....      BL       getDistance
   \        0x6   0x....             LDR.N    R1,??DataTable6_8
   \        0x8   0x.... 0x....      BL       __aeabi_cfcmple
   \        0xC   0xD201             BCS.N    ??chkArrived_0
   \        0xE   0x2001             MOVS     R0,#+1
   \       0x10   0xE000             B.N      ??chkArrived_1
   \                     ??chkArrived_0: (+1)
   \       0x12   0x2000             MOVS     R0,#+0
   \                     ??chkArrived_1: (+1)
   \       0x14   0xB2C0             UXTB     R0,R0
   \       0x16   0xBD02             POP      {R1,PC}
     34          

   \                                 In section .text, align 2, keep-with-next
     35          void moveForwardToNextPoint() {
   \                     moveForwardToNextPoint: (+1)
   \        0x0   0xE92D 0x43FE      PUSH     {R1-R9,LR}
   \        0x4   0xE001             B.N      ??moveForwardToNextPoint_0
     36            Point unit_Vector;
     37          
     38            while (chkArrived(global_Current_Point, global_Next_Point) == 0 &&
     39                   getCCW(global_Next_Point,
     40                          (Point){global_Next_Point.x + 1, global_Next_Point.y},
     41                          global_Current_Point) >= 0) {
     42              unit_Vector.x = global_Current_Point.x + 1;
     43              unit_Vector.y = global_Current_Point.y;
     44          
     45              while (getTheta(global_Current_Point, unit_Vector, global_Next_Point) !=
     46                         global_Theta &&
     47                     !isInturrupted)
     48                CLOCKWISE_ROTATION();
     49          
     50              if (isInturrupted) {
     51                return;
     52              }
     53          
     54              // Hardware-Level Control
     55              ONE_TICK_FORWARD();
   \                     ??moveForwardToNextPoint_1: (+1)
   \        0x6   0x.... 0x....      BL       ONE_TICK_FORWARD
   \                     ??moveForwardToNextPoint_0: (+1)
   \        0xA   0x....             LDR.N    R6,??DataTable6_5
   \        0xC   0x....             LDR.N    R7,??DataTable6_9
   \        0xE   0xE9D7 0x2300      LDRD     R2,R3,[R7, #+0]
   \       0x12   0xE9D6 0x0100      LDRD     R0,R1,[R6, #+0]
   \       0x16   0x.... 0x....      BL       chkArrived
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD135             BNE.N    ??moveForwardToNextPoint_2
   \       0x1E   0x6839             LDR      R1,[R7, #+0]
   \       0x20   0xF05F 0x507E      MOVS     R0,#+1065353216
   \       0x24   0x.... 0x....      BL       __aeabi_fadd
   \       0x28   0x4680             MOV      R8,R0
   \       0x2A   0x6878             LDR      R0,[R7, #+4]
   \       0x2C   0x4681             MOV      R9,R0
   \       0x2E   0xE9D6 0x0100      LDRD     R0,R1,[R6, #+0]
   \       0x32   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \       0x36   0x4642             MOV      R2,R8
   \       0x38   0x464B             MOV      R3,R9
   \       0x3A   0xE9D7 0x0100      LDRD     R0,R1,[R7, #+0]
   \       0x3E   0x.... 0x....      BL       getCCW
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD421             BMI.N    ??moveForwardToNextPoint_2
   \       0x46   0x6831             LDR      R1,[R6, #+0]
   \       0x48   0xF05F 0x507E      MOVS     R0,#+1065353216
   \       0x4C   0x.... 0x....      BL       __aeabi_fadd
   \       0x50   0x0004             MOVS     R4,R0
   \       0x52   0x6870             LDR      R0,[R6, #+4]
   \       0x54   0x0005             MOVS     R5,R0
   \       0x56   0xE001             B.N      ??moveForwardToNextPoint_3
   \                     ??moveForwardToNextPoint_4: (+1)
   \       0x58   0x.... 0x....      BL       CLOCKWISE_ROTATION
   \                     ??moveForwardToNextPoint_3: (+1)
   \       0x5C   0xE9D7 0x0100      LDRD     R0,R1,[R7, #+0]
   \       0x60   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \       0x64   0x0022             MOVS     R2,R4
   \       0x66   0x002B             MOVS     R3,R5
   \       0x68   0xE9D6 0x0100      LDRD     R0,R1,[R6, #+0]
   \       0x6C   0x.... 0x....      BL       getTheta
   \       0x70   0x....             LDR.N    R1,??DataTable6_10
   \       0x72   0x6809             LDR      R1,[R1, #+0]
   \       0x74   0x4288             CMP      R0,R1
   \       0x76   0xD003             BEQ.N    ??moveForwardToNextPoint_5
   \       0x78   0x....             LDR.N    R0,??DataTable6_11
   \       0x7A   0x6800             LDR      R0,[R0, #+0]
   \       0x7C   0x2800             CMP      R0,#+0
   \       0x7E   0xD0EB             BEQ.N    ??moveForwardToNextPoint_4
   \                     ??moveForwardToNextPoint_5: (+1)
   \       0x80   0x....             LDR.N    R0,??DataTable6_11
   \       0x82   0x6800             LDR      R0,[R0, #+0]
   \       0x84   0x2800             CMP      R0,#+0
   \       0x86   0xD0BE             BEQ.N    ??moveForwardToNextPoint_1
   \       0x88   0xE7FF             B.N      ??moveForwardToNextPoint_6
     56            }
     57          }
   \                     ??moveForwardToNextPoint_2: (+1)
   \                     ??moveForwardToNextPoint_6: (+1)
   \       0x8A   0xE8BD 0x83F7      POP      {R0-R2,R4-R9,PC}
     58          

   \                                 In section .text, align 2, keep-with-next
     59          void moveForwardOnRightWall() {
   \                     moveForwardOnRightWall: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0xE001             B.N      ??moveForwardOnRightWall_0
     60            while (!chkIsInCourse() && GPIO_ReadInputDataBit(GPIO_Prox_Right_Port2,
     61                                                             GPIO_Prox_Right_Pin2) == 0) {
     62              ONE_TICK_FORWARD();
   \                     ??moveForwardOnRightWall_1: (+1)
   \        0x4   0x.... 0x....      BL       ONE_TICK_FORWARD
     63            }
   \                     ??moveForwardOnRightWall_0: (+1)
   \        0x8   0x.... 0x....      BL       chkIsInCourse
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD106             BNE.N    ??moveForwardOnRightWall_2
   \       0x10   0xF44F 0x6100      MOV      R1,#+2048
   \       0x14   0x....             LDR.N    R0,??DataTable6_12
   \       0x16   0x.... 0x....      BL       GPIO_ReadInputDataBit
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD0F2             BEQ.N    ??moveForwardOnRightWall_1
     64          
     65            if (chkIsInCourse()) {
   \                     ??moveForwardOnRightWall_2: (+1)
   \       0x1E   0x.... 0x....      BL       chkIsInCourse
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD00D             BEQ.N    ??moveForwardOnRightWall_3
     66              global_Next_Point = target_Map[chkIsInCourse() - 1];
   \       0x26   0x.... 0x....      BL       chkIsInCourse
   \       0x2A   0x....             LDR.N    R1,??DataTable6_4
   \       0x2C   0xEB01 0x00C0      ADD      R0,R1,R0, LSL #+3
   \       0x30   0x3808             SUBS     R0,R0,#+8
   \       0x32   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \       0x36   0x....             LDR.N    R0,??DataTable6_9
   \       0x38   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
   \       0x3C   0xE00A             B.N      ??moveForwardOnRightWall_4
     67            } else {
     68              while (GPIO_ReadInputDataBit(GPIO_Prox_Right_Port1, GPIO_Prox_Right_Pin1) ==
     69                     1) {
     70                ONE_TICK_CLOCKWISE_ROTATION();
   \                     ??moveForwardOnRightWall_5: (+1)
   \       0x3E   0x.... 0x....      BL       ONE_TICK_CLOCKWISE_ROTATION
     71              }
   \                     ??moveForwardOnRightWall_3: (+1)
   \       0x42   0xF44F 0x6180      MOV      R1,#+1024
   \       0x46   0x....             LDR.N    R0,??DataTable6_12
   \       0x48   0x.... 0x....      BL       GPIO_ReadInputDataBit
   \       0x4C   0x2801             CMP      R0,#+1
   \       0x4E   0xD0F6             BEQ.N    ??moveForwardOnRightWall_5
     72          
     73              moveForwardOnRightWall();
   \       0x50   0xF7FF 0xFFD6      BL       moveForwardOnRightWall
     74            }
     75          }
   \                     ??moveForwardOnRightWall_4: (+1)
   \       0x54   0xBD01             POP      {R0,PC}
     76          

   \                                 In section .text, align 2, keep-with-next
     77          void generalMove() {
   \                     generalMove: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
     78              global_Next_Point = target_Map[0];
   \        0x2   0x....             LDR.N    R0,??DataTable6_4
   \        0x4   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \        0x8   0x....             LDR.N    R0,??DataTable6_9
   \        0xA   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
     79              moveForwardToNextPoint();
   \        0xE   0x.... 0x....      BL       moveForwardToNextPoint
     80          
     81            for (target_Map_Idx = 1; target_Map_Idx < target_Map_size;) {
   \       0x12   0x....             LDR.N    R4,??DataTable6_13
   \       0x14   0x2001             MOVS     R0,#+1
   \       0x16   0x6020             STR      R0,[R4, #+0]
   \       0x18   0xE001             B.N      ??generalMove_0
     82              if (!isInturrupted && chkIsInCourse()) {
     83                moveForwardToNextPoint();
   \                     ??generalMove_1: (+1)
   \       0x1A   0x.... 0x....      BL       moveForwardToNextPoint
     84              } else {
   \                     ??generalMove_0: (+1)
   \       0x1E   0x6820             LDR      R0,[R4, #+0]
   \       0x20   0x....             LDR.N    R1,??DataTable6_3
   \       0x22   0x6809             LDR      R1,[R1, #+0]
   \       0x24   0x4288             CMP      R0,R1
   \       0x26   0xDA0C             BGE.N    ??generalMove_2
   \       0x28   0x....             LDR.N    R5,??DataTable6_11
   \       0x2A   0x6828             LDR      R0,[R5, #+0]
   \       0x2C   0x2800             CMP      R0,#+0
   \       0x2E   0xD103             BNE.N    ??generalMove_3
   \       0x30   0x.... 0x....      BL       chkIsInCourse
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD1F0             BNE.N    ??generalMove_1
     85                isInturrupted = 0;
   \                     ??generalMove_3: (+1)
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0x6028             STR      R0,[R5, #+0]
     86                moveForwardToNextPoint();
   \       0x3C   0x.... 0x....      BL       moveForwardToNextPoint
   \       0x40   0xE7ED             B.N      ??generalMove_0
     87              }
     88            }
     89          }
   \                     ??generalMove_2: (+1)
   \       0x42   0xBD31             POP      {R0,R4,R5,PC}

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \        0x0   0xC083'126F        DC32     0xc083126f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \        0x0   0x4009'21CA        DC32     0x400921ca

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \        0x0   0x4066'8000        DC32     0x40668000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \        0x0   0x....'....        DC32     target_Map_size

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \        0x0   0x....'....        DC32     target_Map

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \        0x0   0x....'....        DC32     global_Current_Point

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \        0x0   0x4334'0000        DC32     0x43340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \        0x0   0x4076'8000        DC32     0x40768000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \        0x0   0x3DCC'CCCD        DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \        0x0   0x....'....        DC32     global_Next_Point

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \        0x0   0x....'....        DC32     global_Theta

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \        0x0   0x....'....        DC32     isInturrupted

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \        0x0   0x4001'1800        DC32     0x40011800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \        0x0   0x....'....        DC32     target_Map_Idx

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   chkArrived
         8   -> getDistance
         8 __aeabi_cfcmple
      32   chkIsInCourse
        32   -> getCCW
      16   generalMove
        16   -> chkIsInCourse
        16   -> moveForwardToNextPoint
      56   getTheta
        56   -> __aeabi_d2iz
        56   -> __aeabi_dadd
        56   -> __aeabi_ddiv
        56   -> __aeabi_f2d
        56   -> __aeabi_fadd
        56   -> __aeabi_fdiv
        56   -> __aeabi_fmul
        56   -> __aeabi_fsub
        56   -> __aeabi_i2f
        56   -> acosf
        56   -> getCCW
        56   -> getDistance
       8   moveForwardOnRightWall
         8   -> GPIO_ReadInputDataBit
         8   -> ONE_TICK_CLOCKWISE_ROTATION
         8   -> ONE_TICK_FORWARD
         8   -> chkIsInCourse
         8   -> moveForwardOnRightWall
      40   moveForwardToNextPoint
        40   -> CLOCKWISE_ROTATION
        40   -> ONE_TICK_FORWARD
        40   -> __aeabi_fadd
        40   -> chkArrived
        40   -> getCCW
        40   -> getTheta
       8   thetaToRad
         8   -> __aeabi_d2f
         8   -> __aeabi_ddiv
         8   -> __aeabi_dmul
         8   -> __aeabi_f2d
         8   -> __aeabi_i2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
      24  chkArrived
      82  chkIsInCourse
      68  generalMove
     204  getTheta
       8  global_Current_Point
       8  global_Next_Point
       4  global_Theta
      86  moveForwardOnRightWall
     142  moveForwardToNextPoint
      32  thetaToRad

 
  20 bytes in section .bss
 694 bytes in section .text
 
 694 bytes of CODE memory
  20 bytes of DATA memory

Errors: none
Warnings: none
